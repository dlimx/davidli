{"version":3,"sources":["webpack:///./src/sections/articles/Articles.List.tsx","webpack:///./src/components/Navigation/Navigation.Paginator.tsx"],"names":["limitToTwoLines","css","mediaqueries","phablet","showDetails","ArticlesListContainer","p","alwaysShowAllDetails","listTile","reverse","narrow","wide","desktop_medium","tablet","listItemRow","desktop","theme","colors","card","listItemTile","listRow","hasOnlyOneArticle","List","gridLayout","Item","ImageContainer","Title","Headings","h2","fonts","serif","hasOverflow","Excerpt","grey","MetaData","ArticleLink","Link","primary","ListItem","article","useContext","GridLayoutContext","title","length","imageSource","hero","regular","hasHeroImage","Object","keys","constructor","to","slug","data-a11y","src","dark","excerpt","date","timeToRead","ArticlesList","articles","hasSetGridLayout","getGridLayout","articlePairs","reduce","result","_value","index","array","push","slice","useEffect","style","opacity","map","ap","isEven","isOdd","key","paginationItemMixin","desktop_up","PageButton","PageNumberBUtton","Spacer","MobileReference","Frame","Paginator","maxPages","count","props","pageCount","current","pageRoot","pathPrefix","getFullPath","n","render","this","previousPath","nextPath","hasNext","hasPrevious","rel","href","getPageLinks","aria-hidden","previousPage","pagesRange","range","truncatedRange","unshift","splice","Set","page","i","className","Component"],"mappings":"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","file":"99d1481fb37f32e9a0a7deefc54ba55d454b6098-3e653603693f1313c977.js","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { Link } from 'gatsby';\n\nimport mediaqueries from '../../styles/media';\nimport { IArticle } from '../../types/types';\nimport Headings from '../../components/Headings';\nimport Image, { ImagePlaceholder } from '../../components/Image';\n\nimport { GridLayoutContext } from './Articles.List.Context';\nimport { IStyledProps } from '../../types/style';\n\nconst wide = '1fr';\nconst narrow = '457px';\n\nconst limitToTwoLines = css`\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  display: -webkit-box;\n  white-space: normal;\n  overflow: hidden;\n\n  ${mediaqueries.phablet`\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst showDetails = css`\n  p {\n    display: -webkit-box;\n  }\n\n  h2 {\n    margin-bottom: 10px;\n  }\n`;\n\nconst ArticlesListContainer = styled.div<{ alwaysShowAllDetails?: boolean }>`\n  transition: opacity 0.25s;\n  ${p => p.alwaysShowAllDetails && showDetails}\n`;\n\ninterface IListTile extends IStyledProps {\n  reverse: boolean;\n}\n\nconst listTile = (p: IListTile) => css`\n  position: relative;\n  display: grid;\n  grid-template-columns: ${p.reverse ? `${narrow} ${wide}` : `${wide} ${narrow}`};\n  grid-template-rows: 2;\n  column-gap: 30px;\n\n  &:not(:last-child) {\n    margin-bottom: 75px;\n  }\n\n  ${mediaqueries.desktop_medium`\n    grid-template-columns: 1fr 1fr;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n    \n    &:not(:last-child) {\n      margin-bottom: 0;\n    }\n  `}\n`;\n\nconst listItemRow = (p: IStyledProps) => css`\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-template-columns: 1fr 488px;\n  grid-column-gap: 96px;\n  grid-template-rows: 1;\n  align-items: center;\n  position: relative;\n  margin-bottom: 50px;\n\n  ${mediaqueries.desktop`\n    grid-column-gap: 24px;\n    grid-template-columns: 1fr 380px;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n  `}\n`;\n\nconst listItemTile = (p: IStyledProps) => css`\n  position: relative;\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    margin-bottom: 40px;\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n  `}\n`;\n\ninterface IListRow extends IStyledProps {\n  hasOnlyOneArticle: boolean;\n}\n\n// If only 1 article, dont create 2 rows.\nconst listRow = (p: IListRow) => css`\n  display: grid;\n  grid-template-rows: ${p.hasOnlyOneArticle ? '1fr' : '1fr 1fr'};\n`;\n\nconst List = styled.div<{\n  reverse: boolean;\n  gridLayout: string;\n  hasOnlyOneArticle: boolean;\n}>`\n  ${p => (p.gridLayout === 'tiles' ? listTile : listRow)}\n`;\n\nconst Item = styled.div<{ gridLayout: string }>`\n  ${p => (p.gridLayout === 'rows' ? listItemRow : listItemTile)}\n`;\n\nconst ImageContainer = styled.div<{ narrow?: boolean; gridLayout: string }>`\n  position: relative;\n  height: ${p => (p.gridLayout === 'tiles' ? '280px' : '220px')};\n  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, ${p => (p.narrow ? 0.22 : 0.3)}),\n    0 18px 36px -18px rgba(0, 0, 0, ${p => (p.narrow ? 0.25 : 0.33)});\n  margin-bottom: ${p => (p.gridLayout === 'tiles' ? '30px' : 0)};\n  transition: transform 0.3s var(--ease-out-quad), box-shadow 0.3s var(--ease-out-quad);\n\n  & > div {\n    height: 100%;\n  }\n\n  ${mediaqueries.tablet`\n    height: 200px;\n    margin-bottom: 35px;\n  `}\n\n  ${mediaqueries.phablet`\n    overflow: hidden;\n    margin-bottom: 0;\n    box-shadow: none;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n  `}\n`;\n\nconst Title = styled(Headings.h2)<{ hasOverflow?: boolean; gridLayout: string; dark?: boolean }>`\n  font-size: 21px;\n  font-family: ${p => p.theme.fonts.serif};\n  margin-bottom: ${p => (p.hasOverflow && p.gridLayout === 'tiles' ? '35px' : '10px')};\n  transition: color 0.3s ease-in-out;\n  ${limitToTwoLines};\n\n  ${mediaqueries.desktop`\n    margin-bottom: 15px;\n  `}\n\n  ${mediaqueries.tablet`\n    font-size: 24px;  \n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 22px;  \n    padding: 30px 20px 0;\n    margin-bottom: 10px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst Excerpt = styled.p<{\n  hasOverflow?: boolean;\n  narrow?: boolean;\n  gridLayout: string;\n}>`\n  ${limitToTwoLines};\n  font-size: 16px;\n  margin-bottom: 10px;\n  color: ${p => p.theme.colors.grey};\n  display: ${p => (p.hasOverflow && p.gridLayout === 'tiles' ? 'none' : 'box')};\n  max-width: ${p => (p.narrow ? '415px' : '515px')};\n\n  ${mediaqueries.desktop`\n    display: -webkit-box;\n  `}\n\n  ${mediaqueries.phablet`\n    margin-bottom: 15px;\n  `}\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding:  0 20px;\n    margin-bottom: 20px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst MetaData = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  color: ${p => p.theme.colors.grey};\n  opacity: 0.33;\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding:  0 20px 30px;\n  `}\n`;\n\nconst ArticleLink = styled(Link)`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  border-radius: 5px;\n  z-index: 1;\n  transition: transform 0.33s var(--ease-out-quart);\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n\n  &:hover ${ImageContainer}, &:focus ${ImageContainer} {\n    transform: translateY(-1px);\n    box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27), 0 30px 50px -30px rgba(0, 0, 0, 0.3);\n  }\n\n  &:hover h2,\n  &:focus h2 {\n    color: ${p => p.theme.colors.primary};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -1.5%;\n    top: -2%;\n    width: 103%;\n    height: 104%;\n    border: 3px solid ${p => p.theme.colors.primary};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 5px;\n  }\n\n  ${mediaqueries.phablet`\n    &:hover ${ImageContainer} {\n      transform: none;\n      box-shadow: initial;\n    }\n\n    &:active {\n      transform: scale(0.97) translateY(3px);\n    }\n  `}\n`;\n\n/**\n * Tiles\n * [LONG], [SHORT]\n * [SHORT], [LONG]\n * [SHORT], [LONG]\n *\n * or ------------\n *\n * Rows\n * [LONG]\n * [LONG]\n * [LONG]\n */\n\ninterface ArticlesListProps {\n  articles: IArticle[];\n  alwaysShowAllDetails?: boolean;\n}\n\ninterface ArticlesListItemProps {\n  article: IArticle;\n  narrow?: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-shadow\nconst ListItem: React.FC<ArticlesListItemProps> = ({ article, narrow }) => {\n  if (!article) return null;\n\n  const { gridLayout } = useContext(GridLayoutContext);\n  const hasOverflow = narrow && article.title.length > 35;\n  const imageSource = narrow ? article.hero.narrow : article.hero.regular;\n  const hasHeroImage = imageSource && Object.keys(imageSource).length !== 0 && imageSource.constructor === Object;\n\n  return (\n    <ArticleLink to={article.slug} data-a11y=\"false\">\n      <Item gridLayout={gridLayout}>\n        <ImageContainer narrow={narrow} gridLayout={gridLayout}>\n          {hasHeroImage ? <Image src={imageSource} /> : <ImagePlaceholder />}\n        </ImageContainer>\n        <div>\n          <Title dark hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {article.title}\n          </Title>\n          <Excerpt narrow={narrow} hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {article.excerpt}\n          </Excerpt>\n          <MetaData>\n            {article.date} · {article.timeToRead} min read\n          </MetaData>\n        </div>\n      </Item>\n    </ArticleLink>\n  );\n};\n\nconst ArticlesList: React.FC<ArticlesListProps> = ({ articles, alwaysShowAllDetails }) => {\n  if (!articles) return null;\n\n  const hasOnlyOneArticle = articles.length === 1;\n  const { gridLayout = 'tiles', hasSetGridLayout, getGridLayout } = useContext(GridLayoutContext);\n\n  /**\n   * We're taking the flat array of articles [{}, {}, {}...]\n   * and turning it into an array of pairs of articles [[{}, {}], [{}, {}], [{}, {}]...]\n   * This makes it simpler to create the grid we want\n   */\n  const articlePairs = articles.reduce((result, _value, index, array) => {\n    if (index % 2 === 0) {\n      result.push(array.slice(index, index + 2));\n    }\n    return result;\n  }, [] as IArticle[][]);\n\n  useEffect(() => getGridLayout(), []);\n\n  return (\n    <ArticlesListContainer style={{ opacity: hasSetGridLayout ? 1 : 0 }} alwaysShowAllDetails={alwaysShowAllDetails}>\n      {articlePairs.map((ap, index) => {\n        const isEven = index % 2 !== 0;\n        const isOdd = index % 2 !== 1;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <List key={index} gridLayout={gridLayout} hasOnlyOneArticle={hasOnlyOneArticle} reverse={isEven}>\n            <ListItem article={ap[0]} narrow={isEven} />\n            <ListItem article={ap[1]} narrow={isOdd} />\n          </List>\n        );\n      })}\n    </ArticlesListContainer>\n  );\n};\n\nexport default ArticlesList;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { Link } from 'gatsby';\nimport { Helmet } from 'react-helmet';\n\nimport { range } from '../../utils';\nimport mediaqueries from '../../styles/media';\n\nimport { IPaginator } from '../../types/types';\nimport { IStyledProps } from '../../types/style';\n\nconst paginationItemMixin = (p: IStyledProps) => css`\n  line-height: 1;\n  color: ${p.theme.colors.title};\n  padding: 0;\n  width: 6.8rem;\n  height: 6.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-variant-numeric: tabular-nums;\n\n  ${mediaqueries.desktop_up`\n    display: block;\n    width: auto;\n    height: auto;\n    padding: 2rem;\n\n    &:first-of-type {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n    }\n  `}\n`;\n\nconst PageButton = styled(Link)`\n  font-weight: 600;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.title};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst PageNumberBUtton = styled(Link)`\n  font-weight: 400;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.title};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst Spacer = styled.span`\n  opacity: 0.3;\n  ${paginationItemMixin}\n  &::before {\n    content: '...';\n  }\n`;\n\nconst MobileReference = styled.span`\n  font-weight: 400;\n  ${paginationItemMixin}\n  color: ${p => p.theme.colors.title};\n\n  em {\n    font-style: normal;\n    color: ${p => p.theme.colors.title};\n  }\n`;\n\nconst Frame = styled.nav`\n  position: relative;\n  z-index: 1;\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    .Paginator__pageLink, ${Spacer} { display: none; }\n    left: -15px;\n  `}\n\n  ${mediaqueries.desktop_up`\n    justify-content: flex-start;\n    ${MobileReference} { display: none; }\n  `}\n`;\n\n/**\n * <Paginator />\n *\n * 1 2 3 ... final page NEXT\n * Component to navigate between different pages on a series of blog post, for example.\n *\n * We're using a <nav> element here so make sure to put the pagination component\n * INSIDE of a section to make sure the markup stays contextually relevant\n *\n * Receives the gatsby-paginator props\n */\n\nclass Paginator extends Component<IPaginator, {}> {\n  maxPages = 3;\n\n  count = this.props.pageCount;\n\n  current = this.props.index;\n\n  pageRoot = this.props.pathPrefix;\n\n  get nextPath() {\n    return this.getFullPath(this.current + 1);\n  }\n\n  get previousPath() {\n    return this.getFullPath(this.current - 1);\n  }\n\n  /**\n   * Utility function to return a 1 ... 5 6 7 ... 10 style pagination\n   */\n  get getPageLinks() {\n    const { current } = this;\n    const { count } = this;\n    const { maxPages } = this;\n\n    // Current is the page we're on\n    // We want to show current - 1, current, current + 1\n    // Of course if we're on page 1, we don't want a page 0\n    const previousPage = current === 1 ? current : current - 1;\n\n    // Now create a range of numbers from the previousPage to the total pages (count)\n    const pagesRange = range(previousPage, count + 1 - previousPage);\n\n    // We might need to truncate that pagesRange if it's\n    // more than the max pages we wish to display (3)\n    const truncatedRange: Array<number | null> = pagesRange.slice(0, maxPages);\n\n    // Throughout this function we might add a null to our pages range.\n    // When it comes to rendering our range if we find a null we'll add a spacer.\n\n    // We might need a spacer at the start of the pagination e.g. 1 ... 3 4 5 etc.\n    // If we're after the second page, we need a ... spacer (3 and up)\n    if (pagesRange[0] > 2) {\n      truncatedRange.unshift(null);\n    }\n    // If we're after the first page, we need page 1 to appear (2 and up)\n    if (pagesRange[0] > 1) {\n      truncatedRange.unshift(1);\n    }\n\n    // If we're on the final page, then there won't be a \"next\" page and\n    // the pagination will end up looking a bit short (e.g. on 8 pages ... 7, 8)\n    // Push to the end an extra page maxPages from the end\n    if (pagesRange[0] + 1 === count && pagesRange[0] - 1 > 0) {\n      truncatedRange.splice(pagesRange.length - 1 - maxPages, 0, pagesRange[0] - 1);\n    }\n\n    // We might need a spacer at the end of the pagination e.g. 4 5 6 ... 8\n    // If we're before the penultimate page, we need a ... spacer\n    if (pagesRange[0] + maxPages < count) {\n      truncatedRange.push(null);\n    }\n\n    // If we're before the last page, we need page <last> to appear\n    if (pagesRange[0] + maxPages - 1 < count) {\n      truncatedRange.push(count);\n    }\n\n    return [...new Set(truncatedRange)].map((page: number | null, i) =>\n      page === null ? (\n        // If you find a null in the truncated array then add a spacer\n        // eslint-disable-next-line react/no-array-index-key\n        <Spacer key={`PaginatorPage_spacer_${i}`} aria-hidden />\n      ) : (\n        // Otherwise render a PageButton\n        <PageNumberBUtton\n          key={`PaginatorPage_${page}`}\n          to={this.getFullPath(page)}\n          style={{ opacity: current === page ? 1 : 0.3 }}\n          className=\"Paginator__pageLink\"\n        >\n          {page}\n        </PageNumberBUtton>\n      ),\n    );\n  }\n\n  /**\n   * Utility to turn an index in to a page path.\n   * All it really does is glue the page path to the front,\n   * but note there's special behaviour for page 1 where the URL should be / not /page/1\n   */\n  getFullPath = (n: number) => {\n    if (this.pageRoot === '/') {\n      return n === 1 ? this.pageRoot : `${this.pageRoot}page/${n}`;\n    }\n    return n === 1 ? this.pageRoot : `${this.pageRoot}/page/${n}`;\n  };\n\n  render() {\n    const { count } = this;\n    const { current } = this;\n\n    if (count <= 1) return null;\n\n    const { previousPath } = this;\n    const { nextPath } = this;\n    const hasNext = this.current < this.count;\n    const hasPrevious = this.current > 1;\n\n    return (\n      <>\n        <Helmet>\n          {hasPrevious && <link rel=\"prev\" href={previousPath} />}\n          {hasNext && <link rel=\"next\" href={nextPath} />}\n        </Helmet>\n        <Frame>\n          {hasPrevious && <PageButton to={previousPath}>Prev</PageButton>}\n          {this.getPageLinks}\n          <MobileReference aria-hidden=\"true\">\n            <em>{current}</em>&nbsp;of {count}\n          </MobileReference>\n          {hasNext && <PageButton to={nextPath}>Next</PageButton>}\n        </Frame>\n      </>\n    );\n  }\n}\n\nexport default Paginator;\n"],"sourceRoot":""}