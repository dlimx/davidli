{"version":3,"sources":["webpack:///./src/components/Bio/Bio.tsx","webpack:///./src/sections/articles/Articles.Hero.tsx","webpack:///./src/templates/articles.template.tsx"],"names":["BioContainer","BioAvatar","p","theme","colors","primary","RoundedImage","Image","BioAvatarInner","BioText","grey","Bio","author","as","authorsPage","Link","to","slug","data-a11y","aria-label","src","avatar","medium","dangerouslySetInnerHTML","__html","bio","SubheadingContainer","mediaqueries","desktop","tablet","phablet","GridControlsContainer","HeadingContainer","HeroHeading","title","GridButton","hover","active","ArticlesHero","authors","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","setGridLayout","hero","useStaticQuery","site","edges","node","siteMetadata","tilesIsActive","Section","relative","id","style","maxWidth","heading","find","featured","onClick","Tiles","Rows","ArticlesPaginator","show","ArticlesPage","location","pageContext","articles","group","additionalContext","Layout","SEO","pathname","narrow","pageCount"],"mappings":"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","file":"component---src-templates-articles-template-tsx-ab96bd73e9248e78227d.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Image from '../Image';\nimport { IAuthor } from '../../types/types';\n\nconst BioContainer = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  left: -10px;\n`;\n\nconst BioAvatar = styled.div<{ to: string }>`\n  display: block;\n  position: relative;\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.25);\n  margin-right: 16px;\n  margin: 10px 26px 10px 10px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: -5px;\n    top: -5px;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    border: 1px solid rgba(0, 0, 0, 0.25);\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -5px;\n    top: -5px;\n    width: 50px;\n    height: 50px;\n    border: 2px solid ${p => p.theme.colors.primary};\n  }\n`;\n\nconst RoundedImage = styled(Image)`\n  border-radius: 50%;\n`;\n\nconst BioAvatarInner = styled.div`\n  height: 40px;\n  width: 40px;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.25);\n  margin-right: 16px;\n  overflow: hidden;\n`;\n\nconst BioText = styled.p`\n  max-width: 430px;\n  font-size: 14px;\n  line-height: 1.45;\n  color: ${p => p.theme.colors.grey};\n\n  a {\n    color: ${p => p.theme.colors.grey};\n    text-decoration: underline;\n  }\n`;\n\nconst Bio: React.FC<{ author: IAuthor }> = ({ author }) => {\n  return (\n    <BioContainer>\n      <BioAvatar as={author.authorsPage ? Link : 'div'} to={author.slug} data-a11y=\"false\" aria-label=\"Author's bio\">\n        <BioAvatarInner>\n          <RoundedImage src={author.avatar.medium} />\n        </BioAvatarInner>\n      </BioAvatar>\n      <BioText dangerouslySetInnerHTML={{ __html: author.bio }} />\n    </BioContainer>\n  );\n};\n\nexport default Bio;\n","import React, { useContext } from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\nimport styled from '@emotion/styled';\n\nimport Icons from '../../icons';\nimport mediaqueries from '../../styles/media';\nimport { IAuthor } from '../../types/types';\nimport Bio from '../../components/Bio';\nimport Section from '../../components/Section';\n\nimport { GridLayoutContext } from './Articles.List.Context';\n\nconst authorQuery = graphql`\n  {\n    site: allSite {\n      edges {\n        node {\n          siteMetadata {\n            hero {\n              heading\n              maxWidth\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst SubheadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 100px;\n\n  ${mediaqueries.desktop`\n    margin-bottom: 80px;\n  `};\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n\n  ${mediaqueries.phablet`\n    display: none;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst HeadingContainer = styled.div`\n  margin: 100px 0;\n\n  ${mediaqueries.desktop`\n    width: 80%;\n  `}\n\n  ${mediaqueries.tablet`\n    width: 100%;\n  `}\n`;\n\nconst HeroHeading = styled.h1`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 52px;\n  line-height: 1.15;\n  color: ${p => p.theme.colors.title};\n\n  a {\n    color: ${p => p.theme.colors.primary};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 38px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 32px;\n  `}\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${p => p.theme.colors.hover};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${p => p.theme.colors.primary};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${p => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${p => p.theme.colors.title};\n    }\n  }\n`;\n\nconst ArticlesHero: React.FC<{ authors: IAuthor[] }> = ({ authors }) => {\n  const { gridLayout = 'tiles', hasSetGridLayout, setGridLayout } = useContext(GridLayoutContext);\n\n  const results = useStaticQuery(authorQuery);\n  const { hero } = results.site.edges[0].node.siteMetadata;\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\n\n  return (\n    <Section relative id=\"Articles__Hero\">\n      <HeadingContainer style={{ maxWidth: `${hero.maxWidth}px` }}>\n        <HeroHeading dangerouslySetInnerHTML={{ __html: hero.heading }} />\n      </HeadingContainer>\n      <SubheadingContainer>\n        <Bio author={authors.find((author: IAuthor) => author.featured)!} />\n        <GridControlsContainer>\n          <GridButton\n            onClick={() => setGridLayout('tiles')}\n            active={tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Tile grid\"\n            aria-label=\"Show articles in Tile grid\"\n          >\n            <Icons.Tiles />\n          </GridButton>\n          <GridButton\n            onClick={() => setGridLayout('rows')}\n            active={!tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Row grid\"\n            aria-label=\"Show articles in Row grid\"\n          >\n            <Icons.Rows />\n          </GridButton>\n        </GridControlsContainer>\n      </SubheadingContainer>\n    </Section>\n  );\n};\n\nexport default ArticlesHero;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { Template } from '../types/types';\nimport Section from '../components/Section';\nimport SEO from '../components/SEO';\nimport Layout from '../components/Layout/Layout';\nimport Paginator from '../components/Navigation/Navigation.Paginator';\n\nimport ArticlesHero from '../sections/articles/Articles.Hero';\nimport ArticlesList from '../sections/articles/Articles.List';\n\nconst ArticlesPaginator = styled.div<{ show: boolean }>`\n  ${p => p.show && `margin-top: 95px;`}\n`;\n\nconst ArticlesPage: Template = ({ location, pageContext }) => {\n  const articles = pageContext.group;\n  const { authors } = pageContext.additionalContext;\n\n  return (\n    <Layout>\n      <SEO pathname={location!.pathname} />\n      <ArticlesHero authors={authors!} />\n      <Section narrow>\n        <ArticlesList articles={articles} />\n        <ArticlesPaginator show={pageContext.pageCount > 1}>\n          <Paginator {...pageContext} />\n        </ArticlesPaginator>\n      </Section>\n    </Layout>\n  );\n};\n\nexport default ArticlesPage;\n"],"sourceRoot":""}