{"version":3,"file":"4a70b591-69f75f261def9a3da947.js","mappings":"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","sources":["webpack://davidli/./src/sections/main/Main.ArticlesList.tsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { Link } from 'gatsby';\n\nimport mediaqueries from '../../styles/media';\nimport { IArticle } from '../../types/types';\nimport Headings from '../../components/Headings';\nimport Image, { ImagePlaceholder } from '../../components/Image';\n\nimport { GridLayoutContext } from './Main.ArticlesList.Context';\nimport { IStyledProps } from '../../types/style';\n\nconst wide = '1fr';\nconst narrow = '457px';\n\nconst limitToTwoLines = css`\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  display: -webkit-box;\n  white-space: normal;\n  overflow: hidden;\n\n  ${mediaqueries.phablet`\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst showDetails = css`\n  p {\n    display: -webkit-box;\n  }\n\n  h2 {\n    margin-bottom: 10px;\n  }\n`;\n\nconst ArticlesListContainer = styled.div<{ alwaysShowAllDetails?: boolean }>`\n  transition: opacity 0.25s;\n  ${p => p.alwaysShowAllDetails && showDetails}\n`;\n\ninterface IListTile extends IStyledProps {\n  reverse: boolean;\n}\n\nconst listTile = (p: IListTile) => css`\n  position: relative;\n  display: grid;\n  grid-template-columns: ${p.reverse ? `${narrow} ${wide}` : `${wide} ${narrow}`};\n  grid-template-rows: 2;\n  column-gap: 30px;\n\n  &:not(:last-child) {\n    margin-bottom: 75px;\n  }\n\n  ${mediaqueries.desktop_medium`\n    grid-template-columns: 1fr 1fr;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n    \n    &:not(:last-child) {\n      margin-bottom: 0;\n    }\n  `}\n`;\n\nconst listItemRow = (p: IStyledProps) => css`\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-template-columns: 1fr 488px;\n  grid-column-gap: 96px;\n  grid-template-rows: 1;\n  align-items: center;\n  position: relative;\n  margin-bottom: 50px;\n\n  ${mediaqueries.desktop`\n    grid-column-gap: 24px;\n    grid-template-columns: 1fr 380px;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n  `}\n`;\n\nconst listItemTile = (p: IStyledProps) => css`\n  position: relative;\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    margin-bottom: 40px;\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n  `}\n`;\n\ninterface IListRow extends IStyledProps {\n  hasOnlyOneArticle: boolean;\n}\n\n// If only 1 article, dont create 2 rows.\nconst listRow = (p: IListRow) => css`\n  display: grid;\n  grid-template-rows: ${p.hasOnlyOneArticle ? '1fr' : '1fr 1fr'};\n`;\n\nconst List = styled.div<{\n  reverse: boolean;\n  gridLayout: string;\n  hasOnlyOneArticle: boolean;\n}>`\n  ${p => (p.gridLayout === 'tiles' ? listTile : listRow)}\n`;\n\nconst Item = styled.div<{ gridLayout: string }>`\n  ${p => (p.gridLayout === 'rows' ? listItemRow : listItemTile)}\n`;\n\nconst ImageContainer = styled.div<{ narrow?: boolean; gridLayout: string }>`\n  position: relative;\n  height: ${p => (p.gridLayout === 'tiles' ? '280px' : '220px')};\n  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, ${p => (p.narrow ? 0.22 : 0.3)}),\n    0 18px 36px -18px rgba(0, 0, 0, ${p => (p.narrow ? 0.25 : 0.33)});\n  margin-bottom: ${p => (p.gridLayout === 'tiles' ? '30px' : 0)};\n  transition: transform 0.3s var(--ease-out-quad), box-shadow 0.3s var(--ease-out-quad);\n\n  & > div {\n    height: 100%;\n  }\n\n  ${mediaqueries.tablet`\n    height: 200px;\n    margin-bottom: 35px;\n  `}\n\n  ${mediaqueries.phablet`\n    overflow: hidden;\n    margin-bottom: 0;\n    box-shadow: none;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n  `}\n`;\n\nconst Title = styled(Headings.h2)<{ hasOverflow?: boolean; gridLayout: string; dark?: boolean }>`\n  font-size: 21px;\n  font-family: ${p => p.theme.fonts.serif};\n  margin-bottom: ${p => (p.hasOverflow && p.gridLayout === 'tiles' ? '35px' : '10px')};\n  transition: color 0.3s ease-in-out;\n  ${limitToTwoLines};\n  color: ${p => p.theme.colors.primary};\n\n  ${mediaqueries.desktop`\n    margin-bottom: 15px;\n  `}\n\n  ${mediaqueries.tablet`\n    font-size: 24px;  \n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 22px;  \n    padding: 30px 20px 0;\n    margin-bottom: 10px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst Excerpt = styled.p<{\n  hasOverflow?: boolean;\n  narrow?: boolean;\n  gridLayout: string;\n}>`\n  ${limitToTwoLines};\n  font-size: 16px;\n  margin-bottom: 10px;\n  color: ${p => p.theme.colors.grey};\n  display: ${p => (p.hasOverflow && p.gridLayout === 'tiles' ? 'none' : 'box')};\n  max-width: ${p => (p.narrow ? '415px' : '515px')};\n\n  ${mediaqueries.desktop`\n    display: -webkit-box;\n  `}\n\n  ${mediaqueries.phablet`\n    margin-bottom: 15px;\n  `}\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding:  0 20px;\n    margin-bottom: 20px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst MetaData = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  color: ${p => p.theme.colors.grey};\n  opacity: 0.33;\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding:  0 20px 30px;\n  `}\n`;\n\nconst ArticleLink = styled(Link)`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  border-radius: 5px;\n  z-index: 1;\n  transition: transform 0.33s var(--ease-out-quart);\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n\n  &:hover ${ImageContainer}, &:focus ${ImageContainer} {\n    transform: translateY(-1px);\n    box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27), 0 30px 50px -30px rgba(0, 0, 0, 0.3);\n  }\n\n  &:hover h2,\n  &:focus h2 {\n    color: ${p => p.theme.colors.secondary};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -1.5%;\n    top: -2%;\n    width: 103%;\n    height: 104%;\n    border: 3px solid ${p => p.theme.colors.primary};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 5px;\n  }\n\n  ${mediaqueries.phablet`\n    &:hover ${ImageContainer} {\n      transform: none;\n      box-shadow: initial;\n    }\n\n    &:active {\n      transform: scale(0.97) translateY(3px);\n    }\n  `}\n`;\n\n/**\n * Tiles\n * [LONG], [SHORT]\n * [SHORT], [LONG]\n * [SHORT], [LONG]\n *\n * or ------------\n *\n * Rows\n * [LONG]\n * [LONG]\n * [LONG]\n */\n\ninterface ArticlesListProps {\n  articles: IArticle[];\n  alwaysShowAllDetails?: boolean;\n}\n\ninterface ArticlesListItemProps {\n  article: IArticle;\n  narrow?: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-shadow\nconst ListItem: React.FC<ArticlesListItemProps> = ({ article, narrow }) => {\n  if (!article) return null;\n\n  const { gridLayout } = useContext(GridLayoutContext);\n  const hasOverflow = narrow && article.title.length > 35;\n  const imageSource = narrow ? article.hero.narrow : article.hero.regular;\n  const hasHeroImage = imageSource && Object.keys(imageSource).length !== 0 && imageSource.constructor === Object;\n\n  return (\n    <ArticleLink to={article.slug} data-a11y=\"false\">\n      <Item gridLayout={gridLayout}>\n        <ImageContainer narrow={narrow} gridLayout={gridLayout}>\n          {hasHeroImage ? <Image src={imageSource?.gatsbyImageData} alt={`Link to ${article.excerpt}`} /> : <ImagePlaceholder />}\n        </ImageContainer>\n        <div>\n          <Title dark hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {article.title}\n          </Title>\n          <Excerpt narrow={narrow} hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {article.excerpt}\n          </Excerpt>\n          <MetaData>\n            {article.date} · {article.timeToRead} min read\n          </MetaData>\n        </div>\n      </Item>\n    </ArticleLink>\n  );\n};\n\nconst MainArticlesList: React.FC<ArticlesListProps> = ({ articles, alwaysShowAllDetails }) => {\n  if (!articles) return null;\n\n  const hasOnlyOneArticle = articles.length === 1;\n  const { gridLayout = 'tiles', hasSetGridLayout, getGridLayout } = useContext(GridLayoutContext);\n\n  /**\n   * We're taking the flat array of articles [{}, {}, {}...]\n   * and turning it into an array of pairs of articles [[{}, {}], [{}, {}], [{}, {}]...]\n   * This makes it simpler to create the grid we want\n   */\n  const articlePairs = articles.reduce((result, _value, index, array) => {\n    if (index % 2 === 0) {\n      result.push(array.slice(index, index + 2));\n    }\n    return result;\n  }, [] as IArticle[][]);\n\n  useEffect(() => getGridLayout(), []);\n\n  return (\n    <ArticlesListContainer style={{ opacity: hasSetGridLayout ? 1 : 0 }} alwaysShowAllDetails={alwaysShowAllDetails}>\n      {articlePairs.map((ap, index) => {\n        const isEven = index % 2 !== 0;\n        const isOdd = index % 2 !== 1;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <List key={index} gridLayout={gridLayout} hasOnlyOneArticle={hasOnlyOneArticle} reverse={isEven}>\n            <ListItem article={ap[0]} narrow={isEven} />\n            <ListItem article={ap[1]} narrow={isOdd} />\n          </List>\n        );\n      })}\n    </ArticlesListContainer>\n  );\n};\n\nexport default MainArticlesList;\n"],"names":["narrow","limitToTwoLines","css","mediaqueries","showDetails","ArticlesListContainer","p","alwaysShowAllDetails","listTile","reverse","wide","listItemRow","theme","colors","card","listItemTile","listRow","hasOnlyOneArticle","List","gridLayout","Item","ImageContainer","Title","_styled","Headings","fonts","serif","hasOverflow","primary","Excerpt","grey","MetaData","ArticleLink","Link","secondary","ListItem","article","useContext","GridLayoutContext","title","length","imageSource","hero","regular","hasHeroImage","Object","keys","constructor","___EmotionJSX","to","slug","Image","src","gatsbyImageData","alt","excerpt","ImagePlaceholder","dark","date","timeToRead","articles","hasSetGridLayout","getGridLayout","articlePairs","reduce","result","_value","index","array","push","slice","useEffect","style","opacity","map","ap","isEven","isOdd","key"],"sourceRoot":""}