{"version":3,"sources":["webpack:///./src/components/Page/Page.Text.tsx","webpack:///./src/components/Navigation/Navigation.Paginator.tsx","webpack:///./src/sections/main/Main.Hero.tsx","webpack:///./src/sections/main/Main.ArticlesList.tsx","webpack:///./src/templates/main.template.tsx","webpack:///./src/components/Bio/Bio.Intro.tsx","webpack:///./src/components/Page/Page.Link.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./src/components/Headings/index.ts"],"names":["PageText","p","theme","colors","articleText","fonts","sansSerif","colorModeTransition","mediaqueries","phablet","paginationItemMixin","css","title","desktop_up","PageButton","Link","PageNumberBUtton","Spacer","MobileReference","Frame","tablet","Paginator","maxPages","count","props","pageCount","current","index","pageRoot","pathPrefix","getFullPath","n","render","this","previousPath","nextPath","hasNext","hasPrevious","Helmet","rel","href","to","getPageLinks","aria-hidden","previousPage","pagesRange","range","truncatedRange","slice","unshift","splice","length","push","Set","map","page","i","key","style","opacity","className","Component","SubheadingContainer","desktop","GridControlsContainer","HeadingContainer","HeroHeading","primary","HeroHeadingHighlight","secondaryBackground","BioContainer","GridButton","hover","active","MainHero","authors","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","setGridLayout","tilesIsActive","Section","relative","id","onClick","data-a11y","aria-label","Tiles","Rows","limitToTwoLines","showDetails","ArticlesListContainer","alwaysShowAllDetails","listTile","reverse","narrow","wide","desktop_medium","listItemRow","card","listItemTile","listRow","hasOnlyOneArticle","List","Item","ImageContainer","Title","Headings","h2","serif","hasOverflow","Excerpt","grey","MetaData","ArticleLink","secondary","ListItem","article","imageSource","hero","regular","hasHeroImage","Object","keys","constructor","slug","Image","src","dark","excerpt","date","timeToRead","MainArticlesList","articles","getGridLayout","articlePairs","reduce","result","_value","array","useEffect","ap","isEven","isOdd","ArticlesPaginator","show","ArticlesPage","location","pageContext","group","additionalContext","Layout","SEO","pathname","BioIntro","role","PageLink","primaryLight","_defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","_createClass","Constructor","protoProps","staticProps","prototype"],"mappings":"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","file":"component---src-templates-main-template-tsx-7049c181374fefc92aaa.js","sourcesContent":["import styled from '@emotion/styled';\nimport mediaqueries from '../../styles/media';\n\nexport const PageText = styled.p`\n  line-height: 1.756;\n  font-size: 18px;\n  color: ${p => p.theme.colors.articleText};\n  font-family: ${p => p.theme.fonts.sansSerif};\n  transition: ${p => p.theme.colorModeTransition};\n  margin: 0 0 35px;\n  width: 100%;\n  ${mediaqueries.phablet`\n    font-size: 14px;\n  `}\n`;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { Link } from 'gatsby';\nimport { Helmet } from 'react-helmet';\n\nimport { range } from '../../utils';\nimport mediaqueries from '../../styles/media';\n\nimport { IPaginator } from '../../types/types';\nimport { IStyledProps } from '../../types/style';\n\nconst paginationItemMixin = (p: IStyledProps) => css`\n  line-height: 1;\n  color: ${p.theme.colors.title};\n  padding: 0;\n  width: 6.8rem;\n  height: 6.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-variant-numeric: tabular-nums;\n\n  ${mediaqueries.desktop_up`\n    display: block;\n    width: auto;\n    height: auto;\n    padding: 2rem;\n\n    &:first-of-type {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n    }\n  `}\n`;\n\nconst PageButton = styled(Link)`\n  font-weight: 600;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.title};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst PageNumberBUtton = styled(Link)`\n  font-weight: 400;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.title};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst Spacer = styled.span`\n  opacity: 0.3;\n  ${paginationItemMixin}\n  &::before {\n    content: '...';\n  }\n`;\n\nconst MobileReference = styled.span`\n  font-weight: 400;\n  ${paginationItemMixin}\n  color: ${p => p.theme.colors.title};\n\n  em {\n    font-style: normal;\n    color: ${p => p.theme.colors.title};\n  }\n`;\n\nconst Frame = styled.nav`\n  position: relative;\n  z-index: 1;\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    .Paginator__pageLink, ${Spacer} { display: none; }\n    left: -15px;\n  `}\n\n  ${mediaqueries.desktop_up`\n    justify-content: flex-start;\n    ${MobileReference} { display: none; }\n  `}\n`;\n\n/**\n * <Paginator />\n *\n * 1 2 3 ... final page NEXT\n * Component to navigate between different pages on a series of blog post, for example.\n *\n * We're using a <nav> element here so make sure to put the pagination component\n * INSIDE of a section to make sure the markup stays contextually relevant\n *\n * Receives the gatsby-paginator props\n */\n\nclass Paginator extends Component<IPaginator, {}> {\n  maxPages = 3;\n\n  count = this.props.pageCount;\n\n  current = this.props.index;\n\n  pageRoot = this.props.pathPrefix;\n\n  get nextPath() {\n    return this.getFullPath(this.current + 1);\n  }\n\n  get previousPath() {\n    return this.getFullPath(this.current - 1);\n  }\n\n  /**\n   * Utility function to return a 1 ... 5 6 7 ... 10 style pagination\n   */\n  get getPageLinks() {\n    const { current } = this;\n    const { count } = this;\n    const { maxPages } = this;\n\n    // Current is the page we're on\n    // We want to show current - 1, current, current + 1\n    // Of course if we're on page 1, we don't want a page 0\n    const previousPage = current === 1 ? current : current - 1;\n\n    // Now create a range of numbers from the previousPage to the total pages (count)\n    const pagesRange = range(previousPage, count + 1 - previousPage);\n\n    // We might need to truncate that pagesRange if it's\n    // more than the max pages we wish to display (3)\n    const truncatedRange: Array<number | null> = pagesRange.slice(0, maxPages);\n\n    // Throughout this function we might add a null to our pages range.\n    // When it comes to rendering our range if we find a null we'll add a spacer.\n\n    // We might need a spacer at the start of the pagination e.g. 1 ... 3 4 5 etc.\n    // If we're after the second page, we need a ... spacer (3 and up)\n    if (pagesRange[0] > 2) {\n      truncatedRange.unshift(null);\n    }\n    // If we're after the first page, we need page 1 to appear (2 and up)\n    if (pagesRange[0] > 1) {\n      truncatedRange.unshift(1);\n    }\n\n    // If we're on the final page, then there won't be a \"next\" page and\n    // the pagination will end up looking a bit short (e.g. on 8 pages ... 7, 8)\n    // Push to the end an extra page maxPages from the end\n    if (pagesRange[0] + 1 === count && pagesRange[0] - 1 > 0) {\n      truncatedRange.splice(pagesRange.length - 1 - maxPages, 0, pagesRange[0] - 1);\n    }\n\n    // We might need a spacer at the end of the pagination e.g. 4 5 6 ... 8\n    // If we're before the penultimate page, we need a ... spacer\n    if (pagesRange[0] + maxPages < count) {\n      truncatedRange.push(null);\n    }\n\n    // If we're before the last page, we need page <last> to appear\n    if (pagesRange[0] + maxPages - 1 < count) {\n      truncatedRange.push(count);\n    }\n\n    return [...new Set(truncatedRange)].map((page: number | null, i) =>\n      page === null ? (\n        // If you find a null in the truncated array then add a spacer\n        // eslint-disable-next-line react/no-array-index-key\n        <Spacer key={`PaginatorPage_spacer_${i}`} aria-hidden />\n      ) : (\n        // Otherwise render a PageButton\n        <PageNumberBUtton\n          key={`PaginatorPage_${page}`}\n          to={this.getFullPath(page)}\n          style={{ opacity: current === page ? 1 : 0.3 }}\n          className=\"Paginator__pageLink\"\n        >\n          {page}\n        </PageNumberBUtton>\n      ),\n    );\n  }\n\n  /**\n   * Utility to turn an index in to a page path.\n   * All it really does is glue the page path to the front,\n   * but note there's special behaviour for page 1 where the URL should be / not /page/1\n   */\n  getFullPath = (n: number) => {\n    if (this.pageRoot === '/') {\n      return n === 1 ? this.pageRoot : `${this.pageRoot}page/${n}`;\n    }\n    return n === 1 ? this.pageRoot : `${this.pageRoot}/page/${n}`;\n  };\n\n  render() {\n    const { count } = this;\n    const { current } = this;\n\n    if (count <= 1) return null;\n\n    const { previousPath } = this;\n    const { nextPath } = this;\n    const hasNext = this.current < this.count;\n    const hasPrevious = this.current > 1;\n\n    return (\n      <>\n        <Helmet>\n          {hasPrevious && <link rel=\"prev\" href={previousPath} />}\n          {hasNext && <link rel=\"next\" href={nextPath} />}\n        </Helmet>\n        <Frame>\n          {hasPrevious && <PageButton to={previousPath}>Prev</PageButton>}\n          {this.getPageLinks}\n          <MobileReference aria-hidden=\"true\">\n            <em>{current}</em>&nbsp;of {count}\n          </MobileReference>\n          {hasNext && <PageButton to={nextPath}>Next</PageButton>}\n        </Frame>\n      </>\n    );\n  }\n}\n\nexport default Paginator;\n","import React, { useContext } from 'react';\nimport styled from '@emotion/styled';\n\nimport Icons from '../../icons';\nimport mediaqueries from '../../styles/media';\nimport { IAuthor } from '../../types/types';\nimport Bio from '../../components/Bio';\nimport Section from '../../components/Section';\n\nimport { GridLayoutContext } from './Main.ArticlesList.Context';\nimport { BioIntro } from '../../components/Bio/Bio.Intro';\nimport { PageText } from '../../components/Page/Page.Text';\n\nconst SubheadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 100px;\n\n  ${mediaqueries.desktop`\n    margin-bottom: 80px;\n  `};\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst HeadingContainer = styled.div`\n  margin: 100px 0;\n\n  ${mediaqueries.desktop`\n    width: 80%;\n  `}\n\n  ${mediaqueries.tablet`\n    width: 100%;\n  `}\n`;\n\nconst HeroHeading = styled.h1`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 52px;\n  color: ${p => p.theme.colors.title};\n  width: 100%;\n\n  a {\n    color: ${p => p.theme.colors.primary};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 38px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 32px;\n  `}\n`;\n\nconst HeroHeadingHighlight = styled.span`\n  background-color: ${p => p.theme.colors.secondaryBackground};\n`;\n\nconst BioContainer = styled.div`\n  margin-right: 40px;\n\n  ${mediaqueries.tablet`\n    margin-right: 0;\n  `};\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${p => p.theme.colors.hover};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${p => p.theme.colors.primary};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${p => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${p => p.theme.colors.title};\n    }\n  }\n`;\n\nconst MainHero: React.FC<{ authors: IAuthor[] }> = ({ authors }) => {\n  const { gridLayout = 'tiles', hasSetGridLayout, setGridLayout } = useContext(GridLayoutContext);\n\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\n\n  return (\n    <Section relative id=\"Articles__Hero\">\n      <HeadingContainer>\n        <HeroHeading>\n          Let&apos;s build a <HeroHeadingHighlight>brighter tomorrow</HeroHeadingHighlight>\n        </HeroHeading>\n      </HeadingContainer>\n      <SubheadingContainer>\n        <BioContainer>\n          <BioIntro />\n          <PageText>All writings and thoughts represent my thoughts only, and not those of any organization or employer.</PageText>\n        </BioContainer>\n        <GridControlsContainer>\n          <GridButton\n            onClick={() => setGridLayout('tiles')}\n            active={tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Tile grid\"\n            aria-label=\"Show articles in Tile grid\"\n          >\n            <Icons.Tiles />\n          </GridButton>\n          <GridButton\n            onClick={() => setGridLayout('rows')}\n            active={!tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Row grid\"\n            aria-label=\"Show articles in Row grid\"\n          >\n            <Icons.Rows />\n          </GridButton>\n        </GridControlsContainer>\n      </SubheadingContainer>\n    </Section>\n  );\n};\n\nexport default MainHero;\n","import React, { useContext, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { Link } from 'gatsby';\n\nimport mediaqueries from '../../styles/media';\nimport { IArticle } from '../../types/types';\nimport Headings from '../../components/Headings';\nimport Image, { ImagePlaceholder } from '../../components/Image';\n\nimport { GridLayoutContext } from './Main.ArticlesList.Context';\nimport { IStyledProps } from '../../types/style';\n\nconst wide = '1fr';\nconst narrow = '457px';\n\nconst limitToTwoLines = css`\n  text-overflow: ellipsis;\n  overflow-wrap: normal;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  display: -webkit-box;\n  white-space: normal;\n  overflow: hidden;\n\n  ${mediaqueries.phablet`\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst showDetails = css`\n  p {\n    display: -webkit-box;\n  }\n\n  h2 {\n    margin-bottom: 10px;\n  }\n`;\n\nconst ArticlesListContainer = styled.div<{ alwaysShowAllDetails?: boolean }>`\n  transition: opacity 0.25s;\n  ${p => p.alwaysShowAllDetails && showDetails}\n`;\n\ninterface IListTile extends IStyledProps {\n  reverse: boolean;\n}\n\nconst listTile = (p: IListTile) => css`\n  position: relative;\n  display: grid;\n  grid-template-columns: ${p.reverse ? `${narrow} ${wide}` : `${wide} ${narrow}`};\n  grid-template-rows: 2;\n  column-gap: 30px;\n\n  &:not(:last-child) {\n    margin-bottom: 75px;\n  }\n\n  ${mediaqueries.desktop_medium`\n    grid-template-columns: 1fr 1fr;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n    \n    &:not(:last-child) {\n      margin-bottom: 0;\n    }\n  `}\n`;\n\nconst listItemRow = (p: IStyledProps) => css`\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-template-columns: 1fr 488px;\n  grid-column-gap: 96px;\n  grid-template-rows: 1;\n  align-items: center;\n  position: relative;\n  margin-bottom: 50px;\n\n  ${mediaqueries.desktop`\n    grid-column-gap: 24px;\n    grid-template-columns: 1fr 380px;\n  `}\n\n  ${mediaqueries.tablet`\n    grid-template-columns: 1fr;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n  `}\n`;\n\nconst listItemTile = (p: IStyledProps) => css`\n  position: relative;\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `}\n\n  @media (max-width: 540px) {\n    background: ${p.theme.colors.card};\n  }\n\n  ${mediaqueries.phablet`\n    margin-bottom: 40px;\n    box-shadow: 0px 20px 40px rgba(0, 0, 0, 0.2);\n    border-bottom-right-radius: 5px;\n    border-bottom-left-radius: 5px;\n  `}\n`;\n\ninterface IListRow extends IStyledProps {\n  hasOnlyOneArticle: boolean;\n}\n\n// If only 1 article, dont create 2 rows.\nconst listRow = (p: IListRow) => css`\n  display: grid;\n  grid-template-rows: ${p.hasOnlyOneArticle ? '1fr' : '1fr 1fr'};\n`;\n\nconst List = styled.div<{\n  reverse: boolean;\n  gridLayout: string;\n  hasOnlyOneArticle: boolean;\n}>`\n  ${p => (p.gridLayout === 'tiles' ? listTile : listRow)}\n`;\n\nconst Item = styled.div<{ gridLayout: string }>`\n  ${p => (p.gridLayout === 'rows' ? listItemRow : listItemTile)}\n`;\n\nconst ImageContainer = styled.div<{ narrow?: boolean; gridLayout: string }>`\n  position: relative;\n  height: ${p => (p.gridLayout === 'tiles' ? '280px' : '220px')};\n  box-shadow: 0 30px 60px -10px rgba(0, 0, 0, ${p => (p.narrow ? 0.22 : 0.3)}),\n    0 18px 36px -18px rgba(0, 0, 0, ${p => (p.narrow ? 0.25 : 0.33)});\n  margin-bottom: ${p => (p.gridLayout === 'tiles' ? '30px' : 0)};\n  transition: transform 0.3s var(--ease-out-quad), box-shadow 0.3s var(--ease-out-quad);\n\n  & > div {\n    height: 100%;\n  }\n\n  ${mediaqueries.tablet`\n    height: 200px;\n    margin-bottom: 35px;\n  `}\n\n  ${mediaqueries.phablet`\n    overflow: hidden;\n    margin-bottom: 0;\n    box-shadow: none;\n    border-top-right-radius: 5px;\n    border-top-left-radius: 5px;\n  `}\n`;\n\nconst Title = styled(Headings.h2)<{ hasOverflow?: boolean; gridLayout: string; dark?: boolean }>`\n  font-size: 21px;\n  font-family: ${p => p.theme.fonts.serif};\n  margin-bottom: ${p => (p.hasOverflow && p.gridLayout === 'tiles' ? '35px' : '10px')};\n  transition: color 0.3s ease-in-out;\n  ${limitToTwoLines};\n  color: ${p => p.theme.colors.primary};\n\n  ${mediaqueries.desktop`\n    margin-bottom: 15px;\n  `}\n\n  ${mediaqueries.tablet`\n    font-size: 24px;  \n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 22px;  \n    padding: 30px 20px 0;\n    margin-bottom: 10px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst Excerpt = styled.p<{\n  hasOverflow?: boolean;\n  narrow?: boolean;\n  gridLayout: string;\n}>`\n  ${limitToTwoLines};\n  font-size: 16px;\n  margin-bottom: 10px;\n  color: ${p => p.theme.colors.grey};\n  display: ${p => (p.hasOverflow && p.gridLayout === 'tiles' ? 'none' : 'box')};\n  max-width: ${p => (p.narrow ? '415px' : '515px')};\n\n  ${mediaqueries.desktop`\n    display: -webkit-box;\n  `}\n\n  ${mediaqueries.phablet`\n    margin-bottom: 15px;\n  `}\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding:  0 20px;\n    margin-bottom: 20px;\n    -webkit-line-clamp: 3;\n  `}\n`;\n\nconst MetaData = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  color: ${p => p.theme.colors.grey};\n  opacity: 0.33;\n\n  ${mediaqueries.phablet`\n    max-width: 100%;\n    padding:  0 20px 30px;\n  `}\n`;\n\nconst ArticleLink = styled(Link)`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  border-radius: 5px;\n  z-index: 1;\n  transition: transform 0.33s var(--ease-out-quart);\n  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);\n\n  &:hover ${ImageContainer}, &:focus ${ImageContainer} {\n    transform: translateY(-1px);\n    box-shadow: 0 50px 80px -20px rgba(0, 0, 0, 0.27), 0 30px 50px -30px rgba(0, 0, 0, 0.3);\n  }\n\n  &:hover h2,\n  &:focus h2 {\n    color: ${p => p.theme.colors.secondary};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -1.5%;\n    top: -2%;\n    width: 103%;\n    height: 104%;\n    border: 3px solid ${p => p.theme.colors.primary};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 5px;\n  }\n\n  ${mediaqueries.phablet`\n    &:hover ${ImageContainer} {\n      transform: none;\n      box-shadow: initial;\n    }\n\n    &:active {\n      transform: scale(0.97) translateY(3px);\n    }\n  `}\n`;\n\n/**\n * Tiles\n * [LONG], [SHORT]\n * [SHORT], [LONG]\n * [SHORT], [LONG]\n *\n * or ------------\n *\n * Rows\n * [LONG]\n * [LONG]\n * [LONG]\n */\n\ninterface ArticlesListProps {\n  articles: IArticle[];\n  alwaysShowAllDetails?: boolean;\n}\n\ninterface ArticlesListItemProps {\n  article: IArticle;\n  narrow?: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-shadow\nconst ListItem: React.FC<ArticlesListItemProps> = ({ article, narrow }) => {\n  if (!article) return null;\n\n  const { gridLayout } = useContext(GridLayoutContext);\n  const hasOverflow = narrow && article.title.length > 35;\n  const imageSource = narrow ? article.hero.narrow : article.hero.regular;\n  const hasHeroImage = imageSource && Object.keys(imageSource).length !== 0 && imageSource.constructor === Object;\n\n  return (\n    <ArticleLink to={article.slug} data-a11y=\"false\">\n      <Item gridLayout={gridLayout}>\n        <ImageContainer narrow={narrow} gridLayout={gridLayout}>\n          {hasHeroImage ? <Image src={imageSource} /> : <ImagePlaceholder />}\n        </ImageContainer>\n        <div>\n          <Title dark hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {article.title}\n          </Title>\n          <Excerpt narrow={narrow} hasOverflow={hasOverflow} gridLayout={gridLayout}>\n            {article.excerpt}\n          </Excerpt>\n          <MetaData>\n            {article.date} · {article.timeToRead} min read\n          </MetaData>\n        </div>\n      </Item>\n    </ArticleLink>\n  );\n};\n\nconst MainArticlesList: React.FC<ArticlesListProps> = ({ articles, alwaysShowAllDetails }) => {\n  if (!articles) return null;\n\n  const hasOnlyOneArticle = articles.length === 1;\n  const { gridLayout = 'tiles', hasSetGridLayout, getGridLayout } = useContext(GridLayoutContext);\n\n  /**\n   * We're taking the flat array of articles [{}, {}, {}...]\n   * and turning it into an array of pairs of articles [[{}, {}], [{}, {}], [{}, {}]...]\n   * This makes it simpler to create the grid we want\n   */\n  const articlePairs = articles.reduce((result, _value, index, array) => {\n    if (index % 2 === 0) {\n      result.push(array.slice(index, index + 2));\n    }\n    return result;\n  }, [] as IArticle[][]);\n\n  useEffect(() => getGridLayout(), []);\n\n  return (\n    <ArticlesListContainer style={{ opacity: hasSetGridLayout ? 1 : 0 }} alwaysShowAllDetails={alwaysShowAllDetails}>\n      {articlePairs.map((ap, index) => {\n        const isEven = index % 2 !== 0;\n        const isOdd = index % 2 !== 1;\n\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <List key={index} gridLayout={gridLayout} hasOnlyOneArticle={hasOnlyOneArticle} reverse={isEven}>\n            <ListItem article={ap[0]} narrow={isEven} />\n            <ListItem article={ap[1]} narrow={isOdd} />\n          </List>\n        );\n      })}\n    </ArticlesListContainer>\n  );\n};\n\nexport default MainArticlesList;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { Template } from '../types/types';\nimport Section from '../components/Section';\nimport SEO from '../components/SEO';\nimport Layout from '../components/Layout/Layout';\nimport Paginator from '../components/Navigation/Navigation.Paginator';\n\nimport MainHero from '../sections/main/Main.Hero';\nimport MainArticlesList from '../sections/main/Main.ArticlesList';\n\nconst ArticlesPaginator = styled.div<{ show: boolean }>`\n  ${p => p.show && `margin-top: 95px;`}\n`;\n\nconst ArticlesPage: Template = ({ location, pageContext }) => {\n  const articles = pageContext.group;\n  const { authors } = pageContext.additionalContext;\n\n  return (\n    <Layout>\n      <SEO pathname={location!.pathname} />\n      <MainHero authors={authors!} />\n      <Section narrow>\n        <MainArticlesList articles={articles} />\n        <ArticlesPaginator show={pageContext.pageCount > 1}>\n          <Paginator {...pageContext} />\n        </ArticlesPaginator>\n      </Section>\n    </Layout>\n  );\n};\n\nexport default ArticlesPage;\n","import * as React from 'react';\nimport { PageText } from '../Page/Page.Text';\nimport { PageLink } from '../Page/Page.Link';\n\nexport const BioIntro = () => {\n  return (\n    <PageText>\n      Hey there{' '}\n      <span aria-label=\"Wave Hello\" role=\"img\">\n        👋\n      </span>{' '}\n      , my name is <strong>David (Min Xiao) Li</strong>. I&apos;m a software engineer currently based out of{' '}\n      <strong>Vancouver, Canada</strong>. I currently work at <PageLink href=\"https://aws.amazon.com/\">Amazon Web Services</PageLink>.\n    </PageText>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const PageLink = styled.a`\n  color: ${p => p.theme.colors.primary};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.primaryLight};\n  }\n`;\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export { default } from './Headings';\n"],"sourceRoot":""}