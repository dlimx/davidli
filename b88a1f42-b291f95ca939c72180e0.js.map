{"version":3,"file":"b88a1f42-b291f95ca939c72180e0.js","mappings":"+9BAwBA,IAAMA,EAAU,OACXC,GAAU,IACbC,IAAKC,EAAAA,GACLC,EAAGC,EAAAA,EACHC,WAAYC,EAAAA,EACZC,GAAIC,EAAAA,EAAAA,GACJC,GAAID,EAAAA,EAAAA,GACJE,GAAIF,EAAAA,EAAAA,GACJG,GAAIH,EAAAA,EAAAA,GACJI,GAAIJ,EAAAA,EAAAA,GACJK,GAAIL,EAAAA,EAAAA,GACJM,GAAIC,EAAAA,EACJC,GAAIC,EAAAA,EAAAA,GACJC,GAAID,EAAAA,EAAAA,GACJE,EAAGC,EAAAA,EACHC,KAAMC,EAAAA,EAAAA,MACNC,IAAKD,EAAAA,EAAAA,IACLE,MAAOC,EAAAA,EAAAA,MACPC,MAAOD,EAAAA,EAAAA,KACPE,GAAIF,EAAAA,EAAAA,SACJG,GAAIH,EAAAA,EAAAA,KACJI,WAAYC,EAAAA,IAORC,EAEG,SAFHA,EAGE,QAGFC,GAAgBC,EAAAA,EAAAA,IAAG,8BAIrBC,EAAAA,EAAAA,QAAoB,qDAIpBA,EAAAA,EAAAA,OAAmB,qDAInBA,EAAAA,EAAAA,QAAoB,8DAKlBC,GAAcF,EAAAA,EAAAA,IAAG,0EAgBjBC,EAAAA,EAAAA,OAAmB,iHAgBnBF,EAAa,eAIbI,EAAW,SAACjB,GAAe,OAAKc,EAAAA,EAAAA,IAAG,sJAUtBd,EAAEkB,MAAMC,MAAMC,UAAS,eACxBpB,EAAEkB,MAAMG,OAAOC,MAAMC,WAAU,IAgD3CR,EAAAA,EAAAA,QAAoB,oDAIpBA,EAAAA,EAAAA,OAAmB,oGAMnBA,EAAAA,EAAAA,QAAoB,sWArDlBS,OAAOC,KAAKzB,EAAEkB,MAAMG,OAAOC,OAC1BI,KAAI,SAAAC,GACH,MAAM,KAAKC,EAAAA,EAAAA,IAAYD,GAAI,UAAU3B,EAAEkB,MAAMG,OAAOC,MAAMK,GAAoB,IAChF,IACCE,QAAO,SAACC,EAAMC,GAAI,OAAKD,EAAOC,CAAI,OAAK,qGAaxChB,EAAAA,EAAAA,OAAmB,+IASPf,EAAEkB,MAAMG,OAAOC,MAAMU,UAAS,0BACnBhC,EAAEkB,MAAMG,OAAOC,MAAMW,gBAAe,IAE3DlB,EAAAA,EAAAA,OAAmB,kMAwCrBmB,GAAWpB,EAAAA,EAAAA,IAAG,uLAcdC,EAAAA,EAAAA,OAAmB,8OAiBnBA,EAAAA,EAAAA,OAAmB,+DAInBA,EAAAA,EAAAA,QAAoB,yDAIpBA,EAAAA,EAAAA,OAAmB,qFAKnBA,EAAAA,EAAAA,QAAoB,kPAiBTH,EAAkB,IAE7BG,EAAAA,EAAAA,eAA2B,oDAI3BA,EAAAA,EAAAA,QAAoB,oDAIpBA,EAAAA,EAAAA,OAAmB,6MAcZH,EAAiB,8CAaxBG,EAAAA,EAAAA,QAAoB,oDAIpBA,EAAAA,EAAAA,OAAmB,uIAanBoB,IAAO,6HAOTnB,EAAW,IACXC,EAAQ,IACRiB,EAAQ,KAkBZ,IAfgC,SAAH,GAAyC,IAAnCE,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAAaC,GAAK,YACrDC,GAAaC,EAAAA,EAAAA,MAAJ,GAEhB,OACEC,EAAAA,EAAAA,IAACC,EAAAA,YAAW,CAAC9D,WAAYA,IACvB6D,EAAAA,EAAAA,IAACN,GAAO,MACNM,EAAAA,EAAAA,IAACE,EAAAA,aAAW,QAACC,OAAsB,SAAdL,GAA0BD,GAC5CF,GAEFC,GAIT,C","sources":["webpack://davidli/./src/components/MDX/MDX.tsx"],"sourcesContent":["import React from 'react';\n\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { MDXProvider } from '@mdx-js/react';\n\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { useColorMode } from 'theme-ui';\n\nimport * as shortcodes from '@blocks/kit';\nimport { toKebabCase } from '../../utils';\nimport Anchor from '../Anchor';\nimport Blockquote from '../Blockquote';\nimport Code from '../Code';\nimport Headings from '../Headings';\nimport HorizontalRule from '../HorizontalRule';\nimport Lists from '../Lists';\nimport Paragraph from '../Paragraph';\nimport Tables from '../Tables';\nimport { ImageZoom } from '../Image';\nimport Figcaption from '../Figcaption';\nimport mediaqueries from '../../styles/media';\nimport { IPrism, IStyledProps } from '../../types/style';\n\nconst components = {\n  ...shortcodes,\n  img: ImageZoom,\n  a: Anchor,\n  blockquote: Blockquote,\n  h1: Headings.h2, // h1 reserved article title\n  h2: Headings.h2,\n  h3: Headings.h3,\n  h4: Headings.h4,\n  h5: Headings.h5,\n  h6: Headings.h6,\n  hr: HorizontalRule,\n  ul: Lists.ul,\n  ol: Lists.ol,\n  p: Paragraph,\n  code: Code.Prism,\n  pre: Code.Pre,\n  table: Tables.Table,\n  thead: Tables.Head,\n  th: Tables.HeadCell,\n  td: Tables.Cell,\n  figcaption: Figcaption,\n};\n\ninterface MDXProps {\n  content: React.ReactNode;\n}\n\nconst IMAGE_WIDTHS = {\n  regular: '680px',\n  large: '1004px',\n  full: '100vw',\n};\n\nconst ARTICLE_WIDTH = css`\n  width: 100%;\n  max-width: 680px;\n\n  ${mediaqueries.desktop`\n    max-width: 507px;\n  `}\n\n  ${mediaqueries.tablet`\n    max-width: 486px;\n  `};\n\n  ${mediaqueries.phablet`\n    padding: 0 20px;\n  `};\n`;\n\nconst HeadingsCSS = css`\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 0 auto;\n  }\n\n  h1,\n  h1 *,\n  h2,\n  h2 * {\n    margin: 25px auto 18px;\n\n    ${mediaqueries.tablet`\n      margin: 30px auto 18px;\n    `};\n  }\n\n  h3,\n  h3 * {\n    margin: 20px auto 10px;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    ${ARTICLE_WIDTH};\n  }\n`;\n\nconst PrismCSS = (p: IStyledProps) => css`\n  .prism-code {\n    overflow: auto;\n    width: 100%;\n    max-width: 744px;\n    margin: 0 auto;\n    padding: 32px;\n    font-size: 13px;\n    margin: 15px auto 50px;\n    border-radius: 5px;\n    font-family: ${p.theme.fonts.monospace};\n    background: ${p.theme.colors.prism.background};\n\n    .token-line {\n      border-left: 3px solid transparent;\n\n      ${Object.keys(p.theme.colors.prism)\n        .map(key => {\n          return `.${toKebabCase(key)}{color:${p.theme.colors.prism[key as keyof IPrism]};}`;\n        })\n        .reduce((curr, next) => curr + next, ``)};\n\n      & > span {\n      }\n    }\n\n    .number-line {\n      display: inline-block;\n      width: 32px;\n      user-select: none;\n      opacity: 0.3;\n      color: #dcd9e6;\n\n      ${mediaqueries.tablet`\n        opacity: 0;\n        width: 0;\n      `};\n    }\n\n    .token-line.highlight-line {\n      margin: 0 -32px;\n      padding: 0 32px;\n      background: ${p.theme.colors.prism.highlight};\n      border-left: 3px solid ${p.theme.colors.prism.highlightBorder};\n\n      ${mediaqueries.tablet`\n        margin: 0 -20px;\n        padding: 0 20px;\n      `};\n    }\n\n    .operator + .maybe-class-name {\n      color: #ffcf74 !important;\n    }\n\n    .plain ~ .operator {\n      color: #5fa8aa !important;\n    }\n\n    ${mediaqueries.desktop`\n      left: -26px;\n    `};\n\n    ${mediaqueries.tablet`\n      max-width: 526px;\n      padding: 20px 20px;\n      left: 0;\n    `};\n\n    ${mediaqueries.phablet`\n      text-size-adjust: none;\n      border-radius: 0;\n      margin: 0 auto 25px;\n      padding: 25px 20px;\n      overflow: initial;\n      width: unset;\n      max-width: unset;\n      float: left;\n      min-width: 100%;\n      overflow: initial;\n      position: relative;\n    `};\n  }\n`;\n\nconst ImageCSS = css`\n  .gatsby-resp-image-background-image {\n    display: none !important;\n  }\n\n  img {\n    display: inline-block;\n    position: relative;\n    max-width: 100%;\n    height: auto;\n    z-index: 0;\n    margin: 15px auto 50px;\n    border-radius: 5px;\n\n    ${mediaqueries.tablet`\n      margin: 10px auto 45px;\n    `};\n  }\n\n  div.Image__Small {\n    display: flex;\n    flex-direction: column;\n    position: relative;\n    max-width: 100%;\n    height: auto;\n    z-index: 0;\n    margin: 15px auto 50px;\n    border-radius: 5px;\n    width: 100%;\n    max-width: 680px;\n\n    ${mediaqueries.tablet`\n      margin: 10px auto 45px;\n    `};\n\n    ${mediaqueries.desktop`\n      max-width: 507px;\n    `}\n\n    ${mediaqueries.tablet`\n      max-width: 486px;\n      margin: 0 auto 25px;\n    `};\n\n    ${mediaqueries.phablet`\n      padding: 0 20px;\n    `};\n  }\n\n  .Image__Container {\n    text-align: center;\n  }\n\n  img.Image__With-Shadow {\n    box-shadow: 0px 15px 60px rgba(0, 0, 0, 0.15);\n  }\n\n  div.Image__Medium {\n    position: relative;\n    margin: 15px auto 50px;\n    width: 100%;\n    max-width: ${IMAGE_WIDTHS.large};\n\n    ${mediaqueries.desktop_medium`\n      left: -34px;\n    `};\n\n    ${mediaqueries.desktop`\n      left: -26px;\n    `};\n\n    ${mediaqueries.tablet`\n      border-radius: 0;\n      left: 0;\n      margin: 0 auto 25px;\n\n      img {\n        border-radius: 0;\n      }\n    `};\n  }\n\n  div.Image__Large {\n    position: relative;\n    left: -68px;\n    width: ${IMAGE_WIDTHS.full};\n    margin: 25px auto 60px;\n    pointer-events: none;\n\n    /* To allow interaction for all external interactions: YouTube, Twitter, Gist */\n    iframe {\n      pointer-events: all;\n    }\n\n    img {\n      border-radius: 0;\n    }\n\n    ${mediaqueries.desktop`\n      left: -53px;\n    `};\n\n    ${mediaqueries.tablet`\n      left: 0;\n      margin: 0 auto 25px;\n    `};\n  }\n`;\n\n/**\n * MDXBody\n * Here we're applying \"global\" selectors to make sure we maintain an article\n * body type feel. We're also applying all the Prism selecotors and styles within\n * the MDXBody.\n */\nconst MDXBody = styled.div`\n  position: relative;\n  z-index: 10;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n\n  ${HeadingsCSS}\n  ${PrismCSS}\n  ${ImageCSS}\n`;\n\nconst MDX: React.FC<MDXProps> = ({ content, children, ...props }) => {\n  const [colorMode] = useColorMode();\n\n  return (\n    <MDXProvider components={components}>\n      <MDXBody>\n        <MDXRenderer isDark={colorMode === 'dark'} {...props}>\n          {content as any}\n        </MDXRenderer>\n        {children}\n      </MDXBody>\n    </MDXProvider>\n  );\n};\n\nexport default MDX;\n"],"names":["components","shortcodes","img","ImageZoom","a","Anchor","blockquote","Blockquote","h1","Headings","h2","h3","h4","h5","h6","hr","HorizontalRule","ul","Lists","ol","p","Paragraph","code","Code","pre","table","Tables","thead","th","td","figcaption","Figcaption","IMAGE_WIDTHS","ARTICLE_WIDTH","css","mediaqueries","HeadingsCSS","PrismCSS","theme","fonts","monospace","colors","prism","background","Object","keys","map","key","toKebabCase","reduce","curr","next","highlight","highlightBorder","ImageCSS","MDXBody","content","children","props","colorMode","useColorMode","___EmotionJSX","MDXProvider","MDXRenderer","isDark"],"sourceRoot":""}