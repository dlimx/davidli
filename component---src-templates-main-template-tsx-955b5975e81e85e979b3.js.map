{"version":3,"file":"component---src-templates-main-template-tsx-955b5975e81e85e979b3.js","mappings":"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","sources":["webpack://davidli/./src/components/Bio/Bio.Intro.tsx","webpack://davidli/./src/components/Page/Page.Link.tsx","webpack://davidli/./src/components/Page/Page.Text.tsx","webpack://davidli/./src/components/Navigation/Navigation.Paginator.tsx","webpack://davidli/./src/sections/main/Main.Hero.tsx","webpack://davidli/./src/templates/main.template.tsx","webpack://davidli/./node_modules/@babel/runtime/helpers/esm/createClass.js"],"sourcesContent":["import * as React from 'react';\nimport { PageText } from '../Page/Page.Text';\nimport { PageLink } from '../Page/Page.Link';\n\nexport const BioIntro = () => {\n  return (\n    <PageText>\n      Hey there{' '}\n      <span aria-label=\"Wave Hello\" role=\"img\">\n        ðŸ‘‹\n      </span>{' '}\n      , my name is <strong>David (Min Xiao) Li</strong>. I&apos;m a software engineer based out of <strong>New York</strong>. I currently\n      work at <PageLink href=\"https://asana.com/\">Asana</PageLink>, where I&apos;m bringing goals into day to day life.\n    </PageText>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const PageLink = styled.a`\n  color: ${p => p.theme.colors.primary};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.primaryLight};\n  }\n`;\n","import styled from '@emotion/styled';\nimport mediaqueries from '../../styles/media';\n\nexport const PageText = styled.p`\n  line-height: 1.756;\n  font-size: 18px;\n  color: ${p => p.theme.colors.articleText};\n  font-family: ${p => p.theme.fonts.sansSerif};\n  transition: ${p => p.theme.colorModeTransition};\n  margin: 0 0 35px;\n  width: 100%;\n  ${mediaqueries.phablet`\n    font-size: 14px;\n  `}\n`;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { Link } from 'gatsby';\nimport { Helmet } from 'react-helmet';\n\nimport { range } from '../../utils';\nimport mediaqueries from '../../styles/media';\n\nimport { IPaginator } from '../../types/types';\nimport { IStyledProps } from '../../types/style';\n\nconst paginationItemMixin = (p: IStyledProps) => css`\n  line-height: 1;\n  color: ${p.theme.colors.title};\n  padding: 0;\n  width: 6.8rem;\n  height: 6.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-variant-numeric: tabular-nums;\n\n  ${mediaqueries.desktop_up`\n    display: block;\n    width: auto;\n    height: auto;\n    padding: 2rem;\n\n    &:first-of-type {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n    }\n  `}\n`;\n\nconst PageButton = styled(Link)`\n  font-weight: 600;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.title};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst PageNumberBUtton = styled(Link)`\n  font-weight: 400;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.title};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst Spacer = styled.span`\n  opacity: 0.3;\n  ${paginationItemMixin}\n  &::before {\n    content: '...';\n  }\n`;\n\nconst MobileReference = styled.span`\n  font-weight: 400;\n  ${paginationItemMixin}\n  color: ${p => p.theme.colors.title};\n\n  em {\n    font-style: normal;\n    color: ${p => p.theme.colors.title};\n  }\n`;\n\nconst Frame = styled.nav`\n  position: relative;\n  z-index: 1;\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    .Paginator__pageLink, ${Spacer} { display: none; }\n    left: -15px;\n  `}\n\n  ${mediaqueries.desktop_up`\n    justify-content: flex-start;\n    ${MobileReference} { display: none; }\n  `}\n`;\n\n/**\n * <Paginator />\n *\n * 1 2 3 ... final page NEXT\n * Component to navigate between different pages on a series of blog post, for example.\n *\n * We're using a <nav> element here so make sure to put the pagination component\n * INSIDE of a section to make sure the markup stays contextually relevant\n *\n * Receives the gatsby-paginator props\n */\n\nclass Paginator extends Component<IPaginator, {}> {\n  maxPages = 3;\n\n  count = this.props.pageCount;\n\n  current = this.props.index;\n\n  pageRoot = this.props.pathPrefix;\n\n  get nextPath() {\n    return this.getFullPath(this.current + 1);\n  }\n\n  get previousPath() {\n    return this.getFullPath(this.current - 1);\n  }\n\n  /**\n   * Utility function to return a 1 ... 5 6 7 ... 10 style pagination\n   */\n  get getPageLinks() {\n    const { current } = this;\n    const { count } = this;\n    const { maxPages } = this;\n\n    // Current is the page we're on\n    // We want to show current - 1, current, current + 1\n    // Of course if we're on page 1, we don't want a page 0\n    const previousPage = current === 1 ? current : current - 1;\n\n    // Now create a range of numbers from the previousPage to the total pages (count)\n    const pagesRange = range(previousPage, count + 1 - previousPage);\n\n    // We might need to truncate that pagesRange if it's\n    // more than the max pages we wish to display (3)\n    const truncatedRange: Array<number | null> = pagesRange.slice(0, maxPages);\n\n    // Throughout this function we might add a null to our pages range.\n    // When it comes to rendering our range if we find a null we'll add a spacer.\n\n    // We might need a spacer at the start of the pagination e.g. 1 ... 3 4 5 etc.\n    // If we're after the second page, we need a ... spacer (3 and up)\n    if (pagesRange[0] > 2) {\n      truncatedRange.unshift(null);\n    }\n    // If we're after the first page, we need page 1 to appear (2 and up)\n    if (pagesRange[0] > 1) {\n      truncatedRange.unshift(1);\n    }\n\n    // If we're on the final page, then there won't be a \"next\" page and\n    // the pagination will end up looking a bit short (e.g. on 8 pages ... 7, 8)\n    // Push to the end an extra page maxPages from the end\n    if (pagesRange[0] + 1 === count && pagesRange[0] - 1 > 0) {\n      truncatedRange.splice(pagesRange.length - 1 - maxPages, 0, pagesRange[0] - 1);\n    }\n\n    // We might need a spacer at the end of the pagination e.g. 4 5 6 ... 8\n    // If we're before the penultimate page, we need a ... spacer\n    if (pagesRange[0] + maxPages < count) {\n      truncatedRange.push(null);\n    }\n\n    // If we're before the last page, we need page <last> to appear\n    if (pagesRange[0] + maxPages - 1 < count) {\n      truncatedRange.push(count);\n    }\n\n    return [...new Set(truncatedRange)].map((page: number | null, i) =>\n      page === null ? (\n        // If you find a null in the truncated array then add a spacer\n        // eslint-disable-next-line react/no-array-index-key\n        <Spacer key={`PaginatorPage_spacer_${i}`} aria-hidden />\n      ) : (\n        // Otherwise render a PageButton\n        <PageNumberBUtton\n          key={`PaginatorPage_${page}`}\n          to={this.getFullPath(page)}\n          style={{ opacity: current === page ? 1 : 0.3 }}\n          className=\"Paginator__pageLink\"\n        >\n          {page}\n        </PageNumberBUtton>\n      ),\n    );\n  }\n\n  /**\n   * Utility to turn an index in to a page path.\n   * All it really does is glue the page path to the front,\n   * but note there's special behaviour for page 1 where the URL should be / not /page/1\n   */\n  getFullPath = (n: number) => {\n    if (this.pageRoot === '/') {\n      return n === 1 ? this.pageRoot : `${this.pageRoot}page/${n}`;\n    }\n    return n === 1 ? this.pageRoot : `${this.pageRoot}/page/${n}`;\n  };\n\n  render() {\n    const { count } = this;\n    const { current } = this;\n\n    if (count <= 1) return null;\n\n    const { previousPath } = this;\n    const { nextPath } = this;\n    const hasNext = this.current < this.count;\n    const hasPrevious = this.current > 1;\n\n    return (\n      <>\n        <Helmet>\n          {hasPrevious && <link rel=\"prev\" href={previousPath} />}\n          {hasNext && <link rel=\"next\" href={nextPath} />}\n        </Helmet>\n        <Frame>\n          {hasPrevious && <PageButton to={previousPath}>Prev</PageButton>}\n          {this.getPageLinks}\n          <MobileReference aria-hidden=\"true\">\n            <em>{current}</em>&nbsp;of {count}\n          </MobileReference>\n          {hasNext && <PageButton to={nextPath}>Next</PageButton>}\n        </Frame>\n      </>\n    );\n  }\n}\n\nexport default Paginator;\n","import React, { useContext } from 'react';\nimport styled from '@emotion/styled';\n\nimport Icons from '../../icons';\nimport mediaqueries from '../../styles/media';\nimport { IAuthor } from '../../types/types';\nimport Bio from '../../components/Bio';\nimport Section from '../../components/Section';\n\nimport { GridLayoutContext } from './Main.ArticlesList.Context';\nimport { BioIntro } from '../../components/Bio/Bio.Intro';\nimport { PageText } from '../../components/Page/Page.Text';\n\nconst SubheadingContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 100px;\n\n  ${mediaqueries.desktop`\n    margin-bottom: 80px;\n  `};\n\n  ${mediaqueries.tablet`\n    margin-bottom: 60px;\n  `};\n`;\n\nconst GridControlsContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    display: none;\n  `};\n`;\n\nconst HeadingContainer = styled.div`\n  margin: 100px 0;\n\n  ${mediaqueries.desktop`\n    width: 80%;\n  `}\n\n  ${mediaqueries.tablet`\n    width: 100%;\n  `}\n`;\n\nconst HeroHeading = styled.h1`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 52px;\n  color: ${p => p.theme.colors.title};\n  width: 100%;\n\n  a {\n    color: ${p => p.theme.colors.primary};\n  }\n\n  ${mediaqueries.desktop`\n    font-size: 38px\n  `}\n\n  ${mediaqueries.phablet`\n    font-size: 32px;\n  `}\n`;\n\nconst HeroHeadingHighlight = styled.span`\n  background-color: ${p => p.theme.colors.secondaryBackground};\n`;\n\nconst BioContainer = styled.div`\n  margin-right: 40px;\n\n  ${mediaqueries.tablet`\n    margin-right: 0;\n  `};\n`;\n\nconst GridButton = styled.button<{ active: boolean }>`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 36px;\n  width: 36px;\n  border-radius: 50%;\n  background: transparent;\n  transition: background 0.25s;\n\n  &:not(:last-child) {\n    margin-right: 30px;\n  }\n\n  &:hover {\n    background: ${p => p.theme.colors.hover};\n  }\n\n  &[data-a11y='true']:focus::after {\n    content: '';\n    position: absolute;\n    left: -10%;\n    top: -10%;\n    width: 120%;\n    height: 120%;\n    border: 2px solid ${p => p.theme.colors.primary};\n    background: rgba(255, 255, 255, 0.01);\n    border-radius: 50%;\n  }\n\n  svg {\n    opacity: ${p => (p.active ? 1 : 0.25)};\n    transition: opacity 0.2s;\n\n    path {\n      fill: ${p => p.theme.colors.title};\n    }\n  }\n`;\n\nconst MainHero: React.FC<{ authors: IAuthor[] }> = ({ authors }) => {\n  const { gridLayout = 'tiles', hasSetGridLayout, setGridLayout } = useContext(GridLayoutContext);\n\n  const tilesIsActive = hasSetGridLayout && gridLayout === 'tiles';\n\n  return (\n    <Section relative id=\"Articles__Hero\">\n      <HeadingContainer>\n        <HeroHeading>\n          Let&apos;s build a <HeroHeadingHighlight>brighter tomorrow</HeroHeadingHighlight>\n        </HeroHeading>\n      </HeadingContainer>\n      <SubheadingContainer>\n        <BioContainer>\n          <BioIntro />\n          <PageText>All writings represent my thoughts only, and not those of any organization or employer.</PageText>\n        </BioContainer>\n        <GridControlsContainer>\n          <GridButton\n            onClick={() => setGridLayout('tiles')}\n            active={tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Tile grid\"\n            aria-label=\"Show articles in Tile grid\"\n          >\n            <Icons.Tiles />\n          </GridButton>\n          <GridButton\n            onClick={() => setGridLayout('rows')}\n            active={!tilesIsActive}\n            data-a11y=\"false\"\n            title=\"Show articles in Row grid\"\n            aria-label=\"Show articles in Row grid\"\n          >\n            <Icons.Rows />\n          </GridButton>\n        </GridControlsContainer>\n      </SubheadingContainer>\n    </Section>\n  );\n};\n\nexport default MainHero;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { Template } from '../types/types';\nimport Section from '../components/Section';\nimport SEO from '../components/SEO';\nimport Layout from '../components/Layout/Layout';\nimport Paginator from '../components/Navigation/Navigation.Paginator';\n\nimport MainHero from '../sections/main/Main.Hero';\nimport MainArticlesList from '../sections/main/Main.ArticlesList';\n\nconst ArticlesPaginator = styled.div<{ show: boolean }>`\n  ${p => p.show && `margin-top: 95px;`}\n`;\n\nconst ArticlesPage: Template = ({ location, pageContext }) => {\n  const articles = pageContext.group;\n  const { authors } = pageContext.additionalContext;\n\n  return (\n    <Layout>\n      <SEO pathname={location!.pathname} />\n      <MainHero authors={authors!} />\n      <Section narrow>\n        <MainArticlesList articles={articles} />\n        <ArticlesPaginator show={pageContext.pageCount > 1}>\n          <Paginator {...pageContext} />\n        </ArticlesPaginator>\n      </Section>\n    </Layout>\n  );\n};\n\nexport default ArticlesPage;\n","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}"],"names":["BioIntro","___EmotionJSX","PageText","role","PageLink","href","p","theme","colors","primary","primaryLight","articleText","fonts","sansSerif","colorModeTransition","mediaqueries","paginationItemMixin","css","title","PageButton","_styled","Link","PageNumberBUtton","Spacer","MobileReference","Frame","Paginator","maxPages","count","_this","props","pageCount","current","index","pageRoot","pathPrefix","getFullPath","n","render","this","previousPath","nextPath","hasNext","hasPrevious","Helmet","rel","to","getPageLinks","previousPage","pagesRange","range","truncatedRange","slice","unshift","splice","length","push","_toConsumableArray","Set","map","page","i","key","_this2","style","opacity","className","Component","SubheadingContainer","GridControlsContainer","HeadingContainer","HeroHeading","HeroHeadingHighlight","secondaryBackground","BioContainer","GridButton","hover","active","authors","useContext","GridLayoutContext","gridLayout","hasSetGridLayout","setGridLayout","tilesIsActive","Section","relative","id","onClick","Icons","ArticlesPaginator","target","show","location","pageContext","articles","group","additionalContext","Layout","SEO","pathname","MainHero","narrow","MainArticlesList","_defineProperties","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","Constructor","protoProps","staticProps","prototype"],"sourceRoot":""}